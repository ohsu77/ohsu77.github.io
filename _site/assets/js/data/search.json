[
  
  {
    "title": "713. Subarray Product Less Than k",
    "url": "/posts/713.-subarray-product-less-than-k/",
    "categories": "programming, leetcode, medium",
    "tags": "sliding window",
    "date": "2024-10-14 15:04:28 -0400",
    





    
    "snippet": "url: https://leetcode.com/problems/subarray-product-less-than-k/description/  Input: nums = [10, 5, 2, 6], k = 100 Output: 8Explanation: ¬† [10]¬† [5]¬† [2]¬† [6]¬† [10, 5] = 50¬† [5, 2] = 10¬† [2, 6] = 1...",
    "content": "url: https://leetcode.com/problems/subarray-product-less-than-k/description/  Input: nums = [10, 5, 2, 6], k = 100 Output: 8Explanation: ¬† [10]¬† [5]¬† [2]¬† [6]¬† [10, 5] = 50¬† [5, 2] = 10¬† [2, 6] = 12¬† [5, 2, 6] = 60Note that [10, 5, 2] is not included as the product of 100 is not strictly less than k.üíª Code1. SolutionSliding Window  TC: $O(n)$  SC: $O(1)$class Solution:    def numSubarrayProductLessThanK(self, nums: List[int], k: int) -&gt; int:        ans = 0        left = 0 # left starts from the index 0        prod = 1        # slide the window with conditions        for right, num in enumerate(nums):            prod *= num            # if product of current window larget than k            if prod &gt;= k and left &lt;= right:                # move the left pointer!                prod //= nums[left]                left += 1            # current window less than k            ans += right - left + 1        return ansIn this solution, two pointers (left &amp; right) are needed to set the window up, and it allows us to apply conditions as needed. For the right pointer, it will access the next index if the product of the current window satisfies the condition, which is less than K. In other words, the left pointer will be moved if it is larger than K to shrink and find the appropriate window.  The Most important thing in this logic is to count the valid number of subarrays using right - left + 1 so that we don‚Äôt have to go over the subarray to find a valid combination within the window again.Let‚Äôs think simple! If the window is valid, its subarrays are already verified to meet the condition.  Why +1 ?  Since we extends the right pointer, we should also calculate the new right pointer num itself!"
  },
  
  {
    "title": "56. Merge Intervals",
    "url": "/posts/56.-merge-intervals/",
    "categories": "programming, leetcode",
    "tags": "merge sort, lambda",
    "date": "2024-08-11 11:57:17 -0400",
    





    
    "snippet": "url: https://leetcode.com/problems/merge-intervals/description/  Input: intervals = [[1,3],[2,6],[8,10],[15,18]]  Output: [[1,6],[8,10],[15,18]] Explanation: Since intervals [1,3] and [2,6] overlap...",
    "content": "url: https://leetcode.com/problems/merge-intervals/description/  Input: intervals = [[1,3],[2,6],[8,10],[15,18]]  Output: [[1,6],[8,10],[15,18]] Explanation: Since intervals [1,3] and [2,6] overlap, merge them into [1,6].üíª CodeApproach :  There are two cases to be considered:          Overlapping intervals $\\rightarrow$ merge them to make a single interval      No overlapping intervals $\\rightarrow$ present themselves as it was        Sort on the first element of each interval1. Solution  TC: $O(n \\log n)$          sorted(): $O(n \\log n)$      iteration: $O(n)$        SC: $O(n)$class Solution:    def merge(self, intervals: List[List[int]]) -&gt; List[List[int]]:        # sort based on the starting point of each interval        sorted_intervals = sorted(intervals)        merged = []        for interval in sorted_intervals:            # cases: starting interval or not overlapping            if not merged or merged[-1][1] &lt; interval[0]:                merged.append(interval)            # when overlapping, merge them!            else:                merged[-1][1] = max(merged[-1][1], interval[1])        return merged  There are only 2 cases to be considered, whether intervals are overlapping or not. Thus, focusing on the overlapping part is the key to solving this problem. The method checks between the ending part of the existing interval and the starting part of the incoming part.There is another way to sort the input using lambda instead of sorted().sorted_intervals = intervals.sort(key=lambda x: x[0])This allows us to choose sorting intervals based on the starting position. Thus, we can use this flexibly.2. Additional Practice252. Meeting Rooms253. Meeting Rooms II"
  },
  
  {
    "title": "230. Kth Smallest Element in a BST",
    "url": "/posts/230.-kth-smallest-element-in-a-bst/",
    "categories": "programming, leetcode",
    "tags": "binary tree, inorder",
    "date": "2024-08-01 23:41:33 -0400",
    





    
    "snippet": "url: https://leetcode.com/problems/kth-smallest-element-in-a-bst/description/    Input: root = [5,3,6,2,4,null,null,1], k = 3 Output: 3üíª CodeApproach :  In the binary tree, inorder counts elements ...",
    "content": "url: https://leetcode.com/problems/kth-smallest-element-in-a-bst/description/    Input: root = [5,3,6,2,4,null,null,1], k = 3 Output: 3üíª CodeApproach :  In the binary tree, inorder counts elements as increasing sequence.1. Iteration Inorder  TC: $O(h + k)$          $h$: height        SC: $O(n)$class Solution:    def kthSmallest(self, root: Optional[TreeNode], k: int) -&gt; int:        stack = []        while True:            while root:                stack.append(root)                root = root.left            root = stack.pop()            k -= 1            if k == 0:                return root.val                        root = root.rightThis iterative solution effectively traces the graph to identify the process and provides a clear and intuitive understanding of how the algorithm works.2. Inorder Recursion  TC: $O(n)$  SC: $O(n)$class Solution:    def kthSmallest(self, root: Optional[TreeNode], k: int) -&gt; int:        def in_order(node):            if node is None:                return []            return in_order(node.left) + [node.val] + in_order(node.right)        return in_order(root)[k - 1]    # k - 1, because 1-indexedThis recursion solution reorganize all elements as an inorder. However, it stores whole elements before giving the answer. Thus, $O(n)$.3. Optimal Inorder Recursion  TC: $O(h + k)$  SC: $O(n)$class Solution:    def kthSmallest(self, root: Optional[TreeNode], k: int) -&gt; int:        res = []        def in_order(node, res, k):            if len(res) &lt; k and node is not None:                in_order(node.left, res, k)                res.append(node.val)                in_order(node.right, res, k)        in_order(root, res, k)        return res(root)[k - 1]    # k - 1, because 1-indexedThis improved version of recursion automatically stops when it gets to the kth smallest element."
  },
  
  {
    "title": "2302. Count Subarrays With Score Less Than K",
    "url": "/posts/2302.-count-subarrays-with-score-less-than-k/",
    "categories": "programming, leetcode",
    "tags": "sliding window, amortized analysis",
    "date": "2024-08-01 12:40:29 -0400",
    





    
    "snippet": "url: https://leetcode.com/problems/count-subarrays-with-score-less-than-k/description/  Input:  nums = [2,1,4,3,5], k = 10  Output: 6 Explanation: The 6 subarrays having scores less than 10 are:   ...",
    "content": "url: https://leetcode.com/problems/count-subarrays-with-score-less-than-k/description/  Input:  nums = [2,1,4,3,5], k = 10  Output: 6 Explanation: The 6 subarrays having scores less than 10 are:      [2] with score 2 * 1 = 2.    [1] with score 1 * 1 = 1.    [4] with score 4 * 1 = 4.    [3] with score 3 * 1 = 3.    [5] with score 5 * 1 = 5.    [2,1] with score (2 + 1) * 2 = 6. üí° Note that subarrays such as [1,4] and [4,3,5] are not considered because their scores are 10 and 36 respectively, while we need scores strictly less than 10.  üíª CodeApproach :  Sliding Window ‚úÖ          left &amp; right        Calculation for this problem is: (sum of elements) $*$ (length of the elements) $&lt; k$  A subarray is a contiguous sequence  Return: How many possibilities?1. Solution  TC : $O(n)$  SC: $O(1)$class Solution:    def countSubarrays(self, nums: List[int], k: int) -&gt; int:        cnt = 0        current_sum = 0        left = 0        n = len(nums)        for right in range(n):            current_sum += nums[right]                        # shirink the window by moving the left pointer             # until the sum is less than k.            # if it is less than k, increment the count.            while current_sum * (right - left + 1) &gt;= k:                current_sum -= nums[left]                left += 1            cnt += right - left + 1        return cntThis problem is about the sliding window. Thus, left and right pointers are moving as needed. In this solution, it calculates for the current index first and then decides by keeping with counting or deducting the most left element.üí° The important thing to be considered is the time complex. It can be considered as $O(n^2)$, but $O(n)$ in my solution. Let‚Äôs think about using amortized analysis. The outer for loop runs in $n$ times, and the inner while loop runs at most $n$ times in a worst case. Thus, the inner loop only visits each element once as necessary. In other words, the inner loop never goes up more than $n$ times.Additional Practice713. Subarray Product Less Than K (medium)"
  },
  
  {
    "title": "146. LRU Cache",
    "url": "/posts/146.-lru-cache/",
    "categories": "programming, leetcode",
    "tags": "doubly linked list, lru cache",
    "date": "2024-08-01 12:02:42 -0400",
    





    
    "snippet": "url:https://leetcode.com/problems/lru-cache/description/Example  Input:  [‚ÄúLRUCache‚Äù, ‚Äúput‚Äù, ‚Äúput‚Äù, ‚Äúget‚Äù, ‚Äúput‚Äù, ‚Äúget‚Äù, ‚Äúput‚Äù, ‚Äúget‚Äù, ‚Äúget‚Äù, ‚Äúget‚Äù][[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [...",
    "content": "url:https://leetcode.com/problems/lru-cache/description/Example  Input:  [‚ÄúLRUCache‚Äù, ‚Äúput‚Äù, ‚Äúput‚Äù, ‚Äúget‚Äù, ‚Äúput‚Äù, ‚Äúget‚Äù, ‚Äúput‚Äù, ‚Äúget‚Äù, ‚Äúget‚Äù, ‚Äúget‚Äù][[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]  Output:  [null, null, null, 1, null, -1, null, -1, 3, 4]üíª CodeApproach :  Doubly Linked List helps organizing the order for cache (recently used cache)          keep update cache and node connection when removing &amp; adding            Set dummy nodes for head &amp; tail    TC : $O(1)$  SC: $O(n)$class LRUCache:    class Node:        def __init__(self, key, value):            self.key = key            self.value = value            self.prev = None            self.next = None        def __init__(self, capacity: int):        self.capacity = capacity        self.cache = {}        # head &amp; tail only indicates the first and last node; won't use them        self.head = self.Node(-1, -1)        self.tail = self.Node(-1, -1)        # initial state: head &lt;-&gt; tail        self.head.next = self.tail        self.tail.prev = self.head    def get(self, key: int) -&gt; int:        if key in self.cache:            node = self.cache[key]            # remove the node            self._remove(node)            # bring the node to next of the head            self._add(node)            return node.value        return -1        def put(self, key: int, value: int) -&gt; None:        # if there already? simply remove and put it again        if key in self.cache:            self._remove(self.cache[key])                node = self.Node(key, value)        self._add(node)        # cache = {key: (key, value)}        self.cache[key] = node        # exceeded the capacity?        # remove the last node (old node)        if len(self.cache) &gt; self.capacity:            node_to_remove = self.tail.prev            self._remove(node_to_remove)            del self.cache[node_to_remove.key]            def _remove(self, node):        node.prev.next = node.next        node.next.prev = node.prev        def _add(self, node):        node.prev = self.head        node.next = self.head.next        self.head.next.prev = node        self.head.next = nodeAdditional Practice460. LFU Cache (hard)"
  },
  
  {
    "title": "105. Construct Binary Tree from Preorder and Inorder Traversal",
    "url": "/posts/105.-construct-binary-tree-from-preorder-and-inorder-traversal/",
    "categories": "programming, leetcode",
    "tags": "hash map, inorder, preorder, tree",
    "date": "2024-07-31 14:19:24 -0400",
    





    
    "snippet": "url:https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/description/Example    Input: preorder = [3,9,20,15,7], inorder = [9,3,15,20,7] Output: [3,9,20,null,null...",
    "content": "url:https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/description/Example    Input: preorder = [3,9,20,15,7], inorder = [9,3,15,20,7] Output: [3,9,20,null,null,15,7]üíª CodeApproach :          rootpreorder = [3,  9,  20,  15,  7]inorder  = [9,  3,  15,  20,  7]            |       |_________|           left        right  preorder: increasing by 1, which is the current parent  inorder: current index splits for left &amp; right subtrees1. Brute Force  TC : $O(n^2)$          Recursion: $O(n)$      list.index(int) : $O(n)$        SC: $O(n)$class Solution:    def buildTree(self, preorder: List[int], inorder: List[int]) -&gt; Optional[TreeNode]:        # base case        if not preorder or not inorder:            return None        # set the current first node of preorder as a root        root_val = preorder[0]        root = TreeNode(root_val)        # recognize where we split in left &amp; right        mid = inorder.index(root_val)                # in preorder, the first index will always be a root        # the current index in inorder will be increased if there are more left node        # thus, left: [1:mid + 1], right: [mid + 1:]        # split except the current parent node (inorder)        root.left = self.buildTree(preorder[1:mid + 1], inorder[:mid])        root.right = self.buildTree(preorder[mid + 1:], inorder[mid + 1:])        return rootThe above recursion method identifies the next parent node and connects with its children. The gist of it is figuring out how the components of preorder and inorder represent when it is converted to a tree.The inefficiency of this method is accessing the current parent point of the inorder since it uses index() function. This searches index traversing an array from index 0, which means $O(n)$. Since this is a recursion the time complexity will be $O(n^2)$.Since we create a new tree with arrays, the Space Complexity has to be $O(n)$.2. Optimised Solution‚úÖ Hash map  TC : $O(n)$          Recursion: $O(n)$      hash map : $O(1)$        SC: $O(n)$class Solution:    def buildTree(self, preorder: List[int], inorder: List[int]) -&gt; Optional[TreeNode]:        # {9: 0, 3: 1, 15: 2, 20: 3, 7: 4}        # this takes O(n), but outside of the recursion.        inorder_map = {val: idx for idx, val in enumerate(inorder)}                # set a global reference so that we can access the current parent node.        pre_idx = [0]        def build(in_start, in_end):            if in_start &gt; in_end:                return None            root_val = predorder[pre_idx[0]]            pre_idx[0] += 1            root = TreeNode(root_val)                        # Using map, O(1)!!            mid = inorder_map[root_val]            root.left = build(in_start, mid - 1)            root.right = build(mid + 1, in_end)            return root                return build(0, len(inorder) - 1)"
  },
  
  {
    "title": "347. Top K Frequent Elements",
    "url": "/posts/347.-top-k-frequent-elements/",
    "categories": "programming, leetcode",
    "tags": "hash map, priority queue, heap, bucket sort",
    "date": "2024-07-30 21:08:48 -0400",
    





    
    "snippet": "url:https://leetcode.com/problems/top-k-frequent-elements/description/Example  Input: nums = [1,1,1,2,2,3], k = 2Output: [1,2]üíª CodeApproach : Count each number using hash, then prioritize for k nu...",
    "content": "url:https://leetcode.com/problems/top-k-frequent-elements/description/Example  Input: nums = [1,1,1,2,2,3], k = 2Output: [1,2]üíª CodeApproach : Count each number using hash, then prioritize for k number of elements.1. Brute force  Hash Map &amp; Priority Queue  TC : O(n log n)          n : hash map      log m : heap        SC: O(n)class Solution:    def topKFrequent(self, nums: List[int], k: int) -&gt; List[int]:        freq = {}        for num in nums:            if num not in freq:                freq[num] = 1            else:                freq[num] += 1        heap = []        for num, count in freq.items():            heapq.heappush(heap, (count, num))  # store count first! (minHeap)            if len(heap) &gt; k:                heapq.heappop(heap)                res = [num for count, num in heap]        return resThis method is operated in 2 steps.   First, it counts with a hash map so that we know each element appeared how many times.   Second, a priority queue can be used by importing heapq. Since the minheap is a default implementation in Python, storing count first allows it to pop least frequent elements first when heapq is full; this only stores k number of most frequent elements.2. Optimised Solution  Hash Map &amp; Bucket Sort  TC : O(n)  SC: O(n)class Solution:    def topKFrequent(self, nums: List[int], k: int) -&gt; List[int]:        res = []        freq = {}        # [[], [], [], [], [], []]        buckets = [[] for _ in range(len(nums))]                for num in nums:            if num not in freq:                freq[num] = 1            else:                freq[num] += 1        for num, cnt in freq.items():            # bucket starts from index 0, so cnt - 1            buckets[cnt - 1].append(num)                # iterate the bucket from the end (most frequent)        for i in range(len(buckets) - 1, -1, -1):            if buckets[i]:                for j in bucekts[i]:                    res.append(j)                    if len(res) == k:                        return resThe feature of the Bucket Sort is to store multiple elements at a single index by creating subarrays.We can simply iterate the bucket from the back until we have k number of elements.  Additional Material  Using extend(arr) helps to have more brief code.  # Learning how to use extend() function# it stores all elements inside the bracket (no bracket included)    for i in range(len(buckets) - 1, -1, -1):        if buckets[i]:            res.extend(buckets[i])            if len(res) &gt;= k:   # extend could store more than k                return res[:k]    extend(arr) basically stores all elements in a single bucekt."
  },
  
  {
    "title": "8. String to Integer (atoi)",
    "url": "/posts/8.-string-to-integer-(atoi)/",
    "categories": "programming, leetcode",
    "tags": "tag",
    "date": "2024-07-30 20:23:22 -0400",
    





    
    "snippet": "url: https://leetcode.com/problems/string-to-integer-atoi/description/Example  Input: s = ‚Äú1337c0d3‚ÄùOutput: 1337 Explanation:  Step 1: ‚Äú1337c0d3‚Äù (no characters read because there is no leading whi...",
    "content": "url: https://leetcode.com/problems/string-to-integer-atoi/description/Example  Input: s = ‚Äú1337c0d3‚ÄùOutput: 1337 Explanation:  Step 1: ‚Äú1337c0d3‚Äù (no characters read because there is no leading whitespace) Step 2: ‚Äú1337c0d3‚Äù (no characters read because there is neither a ‚Äò-‚Äò nor ‚Äò+‚Äô)Step 3: ‚Äú1337c0d3‚Äù (‚Äú1337‚Äù is read in; reading stops because the next character is a non-digit)üíª CodeApproach :  - Ignore every comming string elements.  - Make sure set the Max &amp; Min range. - check sign first, and integers.  TC : O(n)  SC: O(1)class Solution:    def myAtoi(self, s: str) -&gt; int:        max_int = 2**31 - 1        min_int = -2**31        i = 0   # current index        n = len(s)        # Step 1: Whitespace exists, then move current index        while i &lt; n and s[i] == ' ':            i += 1                # Step 2: recognizing positive (1) or negative (-1)        # Check the very first sign only!        sign = 1        if i &lt; n and (s[i] == '+' or s[i] == '-'):            if s[i] == '-':                sign = -1            i += 1        # Step 3: now we check integers only        result = 0        while i &lt; n and s[i].isdigit():            result = result * 10 + int(s[i])    # convert str -&gt; int            i += 1        result *= sign        # checking the range validation        if result &lt; min_int:            return min_int        if result &gt; max_int:            return max_int        return result"
  },
  
  {
    "title": "139. Word Break",
    "url": "/posts/139.-word-break/",
    "categories": "programming, leetcode",
    "tags": "dp, dfs",
    "date": "2024-07-30 14:58:50 -0400",
    





    
    "snippet": "url: https://leetcode.com/problems/word-break/description/Example  Input: s = ‚Äúleetcode‚Äù, wordDict = [‚Äúleet‚Äù,‚Äùcode‚Äù]Output: true Explanation: Return true because ‚Äúleetcode‚Äù can be segmented as ‚Äúlee...",
    "content": "url: https://leetcode.com/problems/word-break/description/Example  Input: s = ‚Äúleetcode‚Äù, wordDict = [‚Äúleet‚Äù,‚Äùcode‚Äù]Output: true Explanation: Return true because ‚Äúleetcode‚Äù can be segmented as ‚Äúleet code‚Äù.üí° Note that you are allowed to reuse a dictionary word.üíª CodeApproach : We only need to iterate s once, and wordDict should be checked at the same time.Things to be considered :  Strings in the wordDict can be used multiple times.  Unique strings.  Matching strings in s cannot be overlapped.1. Dynamic Programming  TC : O(n * m)          n : length of s      m : max length of wordDict        SC: O(n) - dpclass Solution:    def wordBreak(self, s: str, wordDict: List[str]) -&gt; bool:        # All the strings of wordDict are unique.        wordSet = set(wordDict)        # checking strings connected w/o overlapping        # true .... true -&gt; it makes a single string that in twordDict        dp = [False] * (len(s) + 1)        dp[0] = True         for i in range(1, len(s) + 1):            for j in range(i):                # dp[j] picks up where we left off last time                # until it matches                if dp[j] and s[j:i] in wordSet:                     dp[i] = True                    break                # return if the last index is true        return dp[len(s)]Using DP to track whether the current position of s is the part of the strings in wordDict allows an intuitive result because of the dp table. Check below the short version of dp table in processing:                      l      e      e      t      c      o      d      e        -------------------------------------------------------------------        dp = [True, False, False, False, False, False, False, False, False]        dp = [True, False, False, False, True, False, False, False, False]        dp = [True, False, False, False, True, False, False, False, True]            =&gt; dp[len(s)] = True            It checks only if the last index is True2. DFS  TC : O(n^2)  SC: O(n)    class Solution:  def wordBreak(self, s: str, wordDict: List[str]) -&gt; bool:      visited = {}      wordSet = set(wordDict)      def dfs(s, wordSet, visited):          if s in visited:              return visited[s]          if s in wordSet:              return True          for i in range(1, len(s)):              prefix = s[:i]              if prefix in wordSet and dfs(s[i:], wordSet, visited):                  visited[s] = True                  return True                  visited[s] = False          return False      return dfs(s, wordSet, visited)        The code processing:      Initial call: dfs(\"leetcode\")      Check prefix \"l\", not in wordSet.      Check prefix \"le\", not in wordSet.      Check prefix \"lee\", not in wordSet.      Check prefix \"leet\", in wordSet.          Recursive call: dfs(\"code\")              Check prefix \"c\", not in wordSet.              Check prefix \"co\", not in wordSet              Check prefix \"cod\", not in wordSet              Check prefix \"code\", in wordSet                  Memoize and return True for \"code\".          Memoize and return True for \"leetcode\"      "
  },
  
  {
    "title": "198. House Robber",
    "url": "/posts/198.-house-robber/",
    "categories": "programming, leetcode",
    "tags": "DP, Dynamic Programming, House Robber",
    "date": "2024-07-26 13:35:07 -0400",
    





    
    "snippet": "url: https://leetcode.com/problems/house-robber/description/Example  Input: nums = [2,7,9,3,1] Output: 12 Explanation: Rob house 1 (money = 2), rob house 3 (money = 9) and rob house 5 (money = 1). ...",
    "content": "url: https://leetcode.com/problems/house-robber/description/Example  Input: nums = [2,7,9,3,1] Output: 12 Explanation: Rob house 1 (money = 2), rob house 3 (money = 9) and rob house 5 (money = 1). Total amount you can rob = 2 + 9 + 1 = 12.üíª Code1. Brute Force (does not pass all cases)  TC : O(n)  SC: O(n) - stackclass Solution:    def rob(self, nums: List[int]) -&gt; int:        n = len(nums)           res = 0        odd_house = []        even_house = [nums[0]]        for i in range(1, n):            if i % 2 == 1:\t# odd houses                odd_house.append(nums[i])            else:                even_house.append(nums[i])                    res = max(sum(odd_house), sum(even_house))          return res My initial approach to the problem is checking houses to see whether they are odd or even.However, this method can‚Äôt handle edge cases. For example, there is a possibility that the sum of indices 0 and 3 can make a maximum amount.2. Dynamic Programming  TC : O(n)  SC: O(n) - DPclass Solution:    def rob(self, nums: List[int]) -&gt; int:        n = len(nums)        if n == 1:            return nums[0]        dp = [0] * n        dp[0] = nums[0]        dp[1] = max(nums[0], nums[1])        for i in range(2, n):            dp[i] = max(dp[i - 1], dp[i - 2] + nums[i])        return dp[-1]Using Dynamic Programming cut the edges where I had a problem. This compares with the current(i - 2) + current(i) and current(i - 1), and the current the maximum value is stored at the current position in dp.By changing the current value, we can see more than the odd &amp; even range that I did earlier.However, since this method stores n length values to dp, the space complexity is O(n).3. Optimal Solution  Inplace shifting  TC : O(n)  SC: O(1)class Solution:    def rob(self, nums: List[int]) -&gt; int:        # [...,  prev, max, curr, ...]        prev_house = 0        max_house = 0                if len(nums) == 1:            return nums[0]        for curr in nums:            temp = max(max_house, prev_house + curr)            prev_house = max_house  # we know, num increment by 1, as well as prev_house            max_house = temp    # change current house as max_house        return max_houseThis is a more efficient way of dealing with the space complexity. There are no other storing variables, such as a stack. It just calculates the current maximum value while it is iterating over all elements.The Key for this method is resetting prev and max points.Additional materials      House Robber II  (The new circumstance is houses are in circle formation)  üí°2 cases to be considered  "
  },
  
  {
    "title": "First Post",
    "url": "/posts/first-post/",
    "categories": "etc..",
    "tags": "etc",
    "date": "2024-07-25 15:29:28 -0400",
    





    
    "snippet": "Hi,Welcome to my github blog.I will mainly upload content related to programming notes.  Leetcode Solutions          Meeting      Self-study        Academic Note          Data Structure &amp; Algor...",
    "content": "Hi,Welcome to my github blog.I will mainly upload content related to programming notes.  Leetcode Solutions          Meeting      Self-study        Academic Note          Data Structure &amp; Algorithm, Design Pattern, Machine Learning      "
  },
  
  {
    "title": "Customize the Favicon",
    "url": "/posts/customize-the-favicon/",
    "categories": "themes, template, Blogging, Tutorial",
    "tags": "favicon",
    "date": "2019-08-10 12:34:00 -0400",
    





    
    "snippet": "The favicons of Chirpy are placed in the directory assets/img/favicons/. You may want to replace them with your own. The following sections will guide you to create and replace the default favicons...",
    "content": "The favicons of Chirpy are placed in the directory assets/img/favicons/. You may want to replace them with your own. The following sections will guide you to create and replace the default favicons.Generate the faviconPrepare a square image (PNG, JPG, or SVG) with a size of 512x512 or more, and then go to the online tool Real Favicon Generator and click the button Select your Favicon image to upload your image file.In the next step, the webpage will show all usage scenarios. You can keep the default options, scroll to the bottom of the page, and click the button Generate your Favicons and HTML code to generate the favicon.Download &amp; ReplaceDownload the generated package, unzip and delete the following two from the extracted files:  browserconfig.xml  site.webmanifestAnd then copy the remaining image files (.PNG and .ICO) to cover the original files in the directory assets/img/favicons/ of your Jekyll site. If your Jekyll site doesn‚Äôt have this directory yet, just create one.The following table will help you understand the changes to the favicon files:            File(s)      From Online Tool      From Chirpy                  *.PNG      ‚úì      ‚úó              *.ICO      ‚úì      ‚úó        ‚úì means keep, ‚úó means delete.The next time you build the site, the favicon will be replaced with a customized edition."
  },
  
  {
    "title": "Getting Started",
    "url": "/posts/getting-started/",
    "categories": "themes, template, Blogging, Tutorial",
    "tags": "getting started",
    "date": "2019-08-09 08:55:00 -0400",
    





    
    "snippet": "Creating a Site RepositoryWhen creating your site repository, you have two options depending on your needs:Option 1. Using the Starter (Recommended)This approach simplifies upgrades, isolates unnec...",
    "content": "Creating a Site RepositoryWhen creating your site repository, you have two options depending on your needs:Option 1. Using the Starter (Recommended)This approach simplifies upgrades, isolates unnecessary files, and is perfect for users who want to focus on writing with minimal configuration.  Sign in to GitHub and navigate to the starter.  Click the Use this template button and then select Create a new repository.  Name the new repository &lt;username&gt;.github.io, replacing username with your lowercase GitHub username.Option 2. Forking the ThemeThis approach is convenient for modifying features or UI design, but presents challenges during upgrades. So don‚Äôt try this unless you are familiar with Jekyll and plan to heavily modify this theme.  Sign in to GitHub.  Fork the theme repository.  Name the new repository &lt;username&gt;.github.io, replacing username with your lowercase GitHub username.Setting up the EnvironmentOnce your repository is created, it‚Äôs time to set up your development environment. There are two primary methods:Using Dev Containers (Recommended for Windows)Dev Containers offer an isolated environment using Docker, which prevents conflicts with your system and ensures all dependencies are managed within the container.Steps:  Install Docker:          On Windows/macOS, install Docker Desktop.      On Linux, install Docker Engine.        Install VS Code and the Dev Containers extension.  Clone your repository:          For Docker Desktop: Start VS Code and clone your repo in a container volume.      For Docker Engine: Clone your repo locally, then open it in a container via VS Code.        Wait for the Dev Containers setup to complete.Setting up Natively (Recommended for Unix-like OS)For Unix-like systems, you can set up the environment natively for optimal performance, though you can also use Dev Containers as an alternative.Steps:  Follow the Jekyll installation guide to install Jekyll and ensure Git is installed.  Clone your repository to your local machine.  If you forked the theme, install Node.js and run bash tools/init.sh in the root directory to initialize the repository.  Run command bundle in the root of your repository to install the dependencies.UsageStart the Jekyll ServerTo run the site locally, use the following command:$ bundle exec jekyll s  If you are using Dev Containers, you must run that command in the VS Code Terminal.After a few seconds, the local server will be available at http://127.0.0.1:4000.ConfigurationUpdate the variables in _config.yml as needed. Some typical options include:  url  avatar  timezone  langSocial Contact OptionsSocial contact options are displayed at the bottom of the sidebar. You can enable or disable specific contacts in the _data/contact.yml file.Customizing the StylesheetTo customize the stylesheet, copy the theme‚Äôs assets/css/jekyll-theme-chirpy.scss file to the same path in your Jekyll site, and add your custom styles at the end of the file.Starting with version 6.2.0, if you want to overwrite the SASS variables defined in _sass/addon/variables.scss, copy the main SASS file _sass/main.scss to the _sass directory in your site‚Äôs source, then create a new file _sass/variables-hook.scss and assign your new values there.Customizing Static AssetsStatic assets configuration was introduced in version 5.1.0. The CDN of the static assets is defined in _data/origin/cors.yml. You can replace some of them based on the network conditions in the region where your website is published.If you prefer to self-host the static assets, refer to the chirpy-static-assets repository.DeploymentBefore deploying, check the _config.yml file and ensure the url is configured correctly. If you prefer a project site and don‚Äôt use a custom domain, or if you want to visit your website with a base URL on a web server other than GitHub Pages, remember to set the baseurl to your project name, starting with a slash, e.g., /project-name.Now you can choose ONE of the following methods to deploy your Jekyll site.Deploy Using Github ActionsPrepare the following:  If you‚Äôre on the GitHub Free plan, keep your site repository public.      If you have committed Gemfile.lock to the repository, and your local machine is not running Linux, update the platform list of the lock file:    $ bundle lock --add-platform x86_64-linux      Next, configure the Pages service:      Go to your repository on GitHub. Select the Settings tab, then click Pages in the left navigation bar. In the Source section (under Build and deployment), select GitHub Actions from the dropdown menu.        Push any commits to GitHub to trigger the Actions workflow. In the Actions tab of your repository, you should see the workflow Build and Deploy running. Once the build is complete and successful, the site will be deployed automatically.  You can now visit the URL provided by GitHub to access your site.Manual Build and DeploymentFor self-hosted servers, you will need to build the site on your local machine and then upload the site files to the server.Navigate to the root of the source project, and build your site with the following command:$ JEKYLL_ENV=production bundle exec jekyll bUnless you specified the output path, the generated site files will be placed in the _site folder of the project‚Äôs root directory. Upload these files to your target server."
  },
  
  {
    "title": "Writing a New Post",
    "url": "/posts/write-a-new-post/",
    "categories": "themes, template, Blogging, Tutorial",
    "tags": "writing",
    "date": "2019-08-08 02:10:00 -0400",
    





    
    "snippet": "This tutorial will guide you how to write a post in the Chirpy template, and it‚Äôs worth reading even if you‚Äôve used Jekyll before, as many features require specific variables to be set.Naming and P...",
    "content": "This tutorial will guide you how to write a post in the Chirpy template, and it‚Äôs worth reading even if you‚Äôve used Jekyll before, as many features require specific variables to be set.Naming and PathCreate a new file named YYYY-MM-DD-TITLE.EXTENSION and put it in the _posts of the root directory. Please note that the EXTENSION must be one of md and markdown. If you want to save time of creating files, please consider using the plugin Jekyll-Compose to accomplish this.Front MatterBasically, you need to fill the Front Matter as below at the top of the post:---title: TITLEdate: YYYY-MM-DD HH:MM:SS +/-TTTTcategories: [TOP_CATEGORIE, SUB_CATEGORIE]tags: [TAG]     # TAG names should always be lowercase---  The posts‚Äô layout has been set to post by default, so there is no need to add the variable layout in the Front Matter block.Timezone of DateTo accurately record the release date of a post, you should not only set up the timezone of _config.yml but also provide the post‚Äôs timezone in variable date of its Front Matter block. Format: +/-TTTT, e.g. +0800.Categories and TagsThe categories of each post are designed to contain up to two elements, and the number of elements in tags can be zero to infinity. For instance:---categories: [Animal, Insect]tags: [bee]---Author InformationThe author information of the post usually does not need to be filled in the Front Matter , they will be obtained from variables social.name and the first entry of social.links of the configuration file by default. But you can also override it as follows:Adding author information in _data/authors.yml (If your website doesn‚Äôt have this file, don‚Äôt hesitate to create one).&lt;author_id&gt;:  name: &lt;full name&gt;  twitter: &lt;twitter_of_author&gt;  url: &lt;homepage_of_author&gt;And then use author to specify a single entry or authors to specify multiple entries:---author: &lt;author_id&gt;                     # for single entry# orauthors: [&lt;author1_id&gt;, &lt;author2_id&gt;]   # for multiple entries---Having said that, the key author can also identify multiple entries.  The benefit of reading the author information from the file _data/authors.yml is that the page will have the meta tag twitter:creator, which enriches the Twitter Cards and is good for SEO.Post DescriptionBy default, the first words of the post are used to display on the home page for a list of posts, in the Further Reading section, and in the XML of the RSS feed. If you don‚Äôt want to display the auto-generated description for the post, you can customize it using the description field in the Front Matter as follows:---description: Short summary of the post.---Additionally, the description text will also be displayed under the post title on the post‚Äôs page.Table of ContentsBy default, the Table of Contents (TOC) is displayed on the right panel of the post. If you want to turn it off globally, go to _config.yml and set the value of variable toc to false. If you want to turn off TOC for a specific post, add the following to the post‚Äôs Front Matter:---toc: false---CommentsThe global switch of comments is defined by variable comments.active in the file _config.yml. After selecting a comment system for this variable, comments will be turned on for all posts.If you want to close the comment for a specific post, add the following to the Front Matter of the post:---comments: false---MediaWe refer to images, audio and video as media resources in Chirpy.URL PrefixFrom time to time we have to define duplicate URL prefixes for multiple resources in a post, which is a boring task that you can avoid by setting two parameters.      If you are using a CDN to host media files, you can specify the cdn in _config.yml. The URLs of media resources for site avatar and posts are then prefixed with the CDN domain name.    cdn: https://cdn.com            To specify the resource path prefix for the current post/page range, set media_subpath in the front matter of the post:    ---media_subpath: /path/to/media/---      The option site.cdn and page.media_subpath can be used individually or in combination to flexibly compose the final resource URL: [site.cdn/][page.media_subpath/]file.extImagesCaptionAdd italics to the next line of an image, then it will become the caption and appear at the bottom of the image:![img-description](/path/to/image)_Image Caption_SizeTo prevent the page content layout from shifting when the image is loaded, we should set the width and height for each image.![Desktop View](/assets/img/sample/mockup.png){: width=\"700\" height=\"400\" }  For an SVG, you have to at least specify its width, otherwise it won‚Äôt be rendered.Starting from Chirpy v5.0.0, height and width support abbreviations (height ‚Üí h, width ‚Üí w). The following example has the same effect as the above:![Desktop View](/assets/img/sample/mockup.png){: w=\"700\" h=\"400\" }PositionBy default, the image is centered, but you can specify the position by using one of the classes normal, left, and right.  Once the position is specified, the image caption should not be added.      Normal position    Image will be left aligned in below sample:    ![Desktop View](/assets/img/sample/mockup.png){: .normal }            Float to the left    ![Desktop View](/assets/img/sample/mockup.png){: .left }            Float to the right    ![Desktop View](/assets/img/sample/mockup.png){: .right }      Dark/Light modeYou can make images follow theme preferences in dark/light mode. This requires you to prepare two images, one for dark mode and one for light mode, and then assign them a specific class (dark or light):![Light mode only](/path/to/light-mode.png){: .light }![Dark mode only](/path/to/dark-mode.png){: .dark }ShadowThe screenshots of the program window can be considered to show the shadow effect:![Desktop View](/assets/img/sample/mockup.png){: .shadow }Preview ImageIf you want to add an image at the top of the post, please provide an image with a resolution of 1200 x 630. Please note that if the image aspect ratio does not meet 1.91 : 1, the image will be scaled and cropped.Knowing these prerequisites, you can start setting the image‚Äôs attribute:---image:  path: /path/to/image  alt: image alternative text---Note that the media_subpath can also be passed to the preview image, that is, when it has been set, the attribute path only needs the image file name.For simple use, you can also just use image to define the path.---image: /path/to/image---LQIPFor preview images:---image:  lqip: /path/to/lqip-file # or base64 URI---  You can observe LQIP in the preview image of post \"Text and Typography\".For normal images:![Image description](/path/to/image){: lqip=\"/path/to/lqip-file\" }VideoSocial Media PlatformYou can embed videos from social media platforms with the following syntax:{% include embed/{Platform}.html id='{ID}' %}Where Platform is the lowercase of the platform name, and ID is the video ID.The following table shows how to get the two parameters we need in a given video URL, and you can also know the currently supported video platforms.            Video URL      Platform      ID                  https://www.youtube.com/watch?v=H-B46URT4mg      youtube      H-B46URT4mg              https://www.twitch.tv/videos/1634779211      twitch      1634779211              https://www.bilibili.com/video/BV1Q44y1B7Wf      bilibili      BV1Q44y1B7Wf      Video FilesIf you want to embed a video file directly, use the following syntax:{% include embed/video.html src='{URL}' %}Where URL is a URL to a video file e.g. /path/to/sample/video.mp4.You can also specify additional attributes for the embedded video file. Here is a full list of attributes allowed.  poster='/path/to/poster.png' ‚Äî poster image for a video that is shown while video is downloading  title='Text' ‚Äî title for a video that appears below the video and looks same as for images  autoplay=true ‚Äî video automatically begins to play back as soon as it can  loop=true ‚Äî automatically seek back to the start upon reaching the end of the video  muted=true ‚Äî audio will be initially silenced  types ‚Äî specify the extensions of additional video formats separated by |. Ensure these files exist in the same directory as your primary video file.Consider an example using all of the above:{%  include embed/video.html  src='/path/to/video.mp4'  types='ogg|mov'  poster='poster.png'  title='Demo video'  autoplay=true  loop=true  muted=true%}AudiosIf you want to embed an audio file directly, use the following syntax:{% include embed/audio.html src='{URL}' %}Where URL is a URL to an audio file e.g. /path/to/audio.mp3.You can also specify additional attributes for the embedded audio file. Here is a full list of attributes allowed.  title='Text' ‚Äî title for an audio that appears below the audio and looks same as for images  types ‚Äî specify the extensions of additional audio formats separated by |. Ensure these files exist in the same directory as your primary audio file.Consider an example using all of the above:{%  include embed/audio.html  src='/path/to/audio.mp3'  types='ogg|wav|aac'  title='Demo audio'%}Pinned PostsYou can pin one or more posts to the top of the home page, and the fixed posts are sorted in reverse order according to their release date. Enable by:---pin: true---PromptsThere are several types of prompts: tip, info, warning, and danger. They can be generated by adding the class prompt-{type} to the blockquote. For example, define a prompt of type info as follows:&gt; Example line for prompt.{: .prompt-info }SyntaxInline Code`inline code part`Filepath Highlight`/path/to/a/file.extend`{: .filepath}Code BlockMarkdown symbols ``` can easily create a code block as follows:```This is a plaintext code snippet.```Specifying LanguageUsing ```{language} you will get a code block with syntax highlight:```yamlkey: value```  The Jekyll tag {% highlight %} is not compatible with this theme.Line NumberBy default, all languages except plaintext, console, and terminal will display line numbers. When you want to hide the line number of a code block, add the class nolineno to it:```shellecho 'No more line numbers!'```{: .nolineno }Specifying the FilenameYou may have noticed that the code language will be displayed at the top of the code block. If you want to replace it with the file name, you can add the attribute file to achieve this:```shell# content```{: file=\"path/to/file\" }Liquid CodesIf you want to display the Liquid snippet, surround the liquid code with {% raw %} and {% endraw %}:{% raw %}```liquid{% if product.title contains 'Pack' %}  This product's title contains the word Pack.{% endif %}```{% endraw %}Or adding render_with_liquid: false (Requires Jekyll 4.0 or higher) to the post‚Äôs YAML block.MathematicsWe use MathJax to generate mathematics. For website performance reasons, the mathematical feature won‚Äôt be loaded by default. But it can be enabled by:---math: true---After enabling the mathematical feature, you can add math equations with the following syntax:  Block math should be added with $$ math $$ with mandatory blank lines before and after $$          Inserting equation numbering should be added with $$\\begin{equation} math \\end{equation}$$      Referencing equation numbering should be done with \\label{eq:label_name} in the equation block and \\eqref{eq:label_name} inline with text (see example below)        Inline math (in lines) should be added with $$ math $$ without any blank line before or after $$  Inline math (in lists) should be added with \\$$ math $$&lt;!-- Block math, keep all blank lines --&gt;$$LaTeX_math_expression$$&lt;!-- Equation numbering, keep all blank lines  --&gt;$$\\begin{equation}  LaTeX_math_expression  \\label{eq:label_name}\\end{equation}$$Can be referenced as \\eqref{eq:label_name}.&lt;!-- Inline math in lines, NO blank lines --&gt;\"Lorem ipsum dolor sit amet, $$ LaTeX_math_expression $$ consectetur adipiscing elit.\"&lt;!-- Inline math in lists, escape the first `$` --&gt;1. \\$$ LaTeX_math_expression $$2. \\$$ LaTeX_math_expression $$3. \\$$ LaTeX_math_expression $$  Starting with v7.0.0, configuration options for MathJax have been moved to file assets/js/data/mathjax.js, and you can change the options as needed, such as adding extensions.If you are building the site via chirpy-starter, copy that file from the gem installation directory (check with command bundle info --path jekyll-theme-chirpy) to the same directory in your repository.MermaidMermaid is a great diagram generation tool. To enable it on your post, add the following to the YAML block:---mermaid: true---Then you can use it like other markdown languages: surround the graph code with ```mermaid and ```.Learn MoreFor more knowledge about Jekyll posts, visit the Jekyll Docs: Posts."
  },
  
  {
    "title": "Text and Typography",
    "url": "/posts/text-and-typography/",
    "categories": "themes, template, Blogging, Demo",
    "tags": "typography",
    "date": "2019-08-07 23:33:00 -0400",
    





    
    "snippet": "HeadingsH1 ‚Äî headingH2 ‚Äî headingH3 ‚Äî headingH4 ‚Äî headingParagraphQuisque egestas convallis ipsum, ut sollicitudin risus tincidunt a. Maecenas interdum malesuada egestas. Duis consectetur porta risu...",
    "content": "HeadingsH1 ‚Äî headingH2 ‚Äî headingH3 ‚Äî headingH4 ‚Äî headingParagraphQuisque egestas convallis ipsum, ut sollicitudin risus tincidunt a. Maecenas interdum malesuada egestas. Duis consectetur porta risus, sit amet vulputate urna facilisis ac. Phasellus semper dui non purus ultrices sodales. Aliquam ante lorem, ornare a feugiat ac, finibus nec mauris. Vivamus ut tristique nisi. Sed vel leo vulputate, efficitur risus non, posuere mi. Nullam tincidunt bibendum rutrum. Proin commodo ornare sapien. Vivamus interdum diam sed sapien blandit, sit amet aliquam risus mattis. Nullam arcu turpis, mollis quis laoreet at, placerat id nibh. Suspendisse venenatis eros eros.ListsOrdered list  Firstly  Secondly  ThirdlyUnordered list  Chapter          Section                  Paragraph                    ToDo list  Job          Step 1      Step 2      Step 3      Description list  Sun  the star around which the earth orbits  Moon  the natural satellite of the earth, visible by reflected light from the sunBlock Quote  This line shows the block quote.Prompts  An example showing the tip type prompt.  An example showing the info type prompt.  An example showing the warning type prompt.  An example showing the danger type prompt.Tables            Company      Contact      Country                  Alfreds Futterkiste      Maria Anders      Germany              Island Trading      Helen Bennett      UK              Magazzini Alimentari Riuniti      Giovanni Rovelli      Italy      Linkshttp://127.0.0.1:4000FootnoteClick the hook will locate the footnote1, and here is another footnote2.Inline codeThis is an example of Inline Code.FilepathHere is the /path/to/the/file.extend.Code blocksCommonThis is a common code snippet, without syntax highlight and line number.Specific Languageif [ $? -ne 0 ]; then  echo \"The command was not successful.\";  #do the needful / exitfi;Specific filename@import  \"colors/light-typography\",  \"colors/dark-typography\";MathematicsThe mathematics powered by MathJax:\\[\\begin{equation}  \\sum_{n=1}^\\infty 1/n^2 = \\frac{\\pi^2}{6}  \\label{eq:series}\\end{equation}\\]We can reference the equation as \\eqref{eq:series}.When $a \\ne 0$, there are two solutions to $ax^2 + bx + c = 0$ and they are\\[x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\]Mermaid SVG gantt  title  Adding GANTT diagram functionality to mermaid  apple :a, 2017-07-20, 1w  banana :crit, b, 2017-07-23, 1d  cherry :active, c, after b a, 1dImagesDefault (with caption)Full screen width and center alignmentLeft alignedFloat to leftPraesent maximus aliquam sapien. Sed vel neque in dolor pulvinar auctor. Maecenas pharetra, sem sit amet interdum posuere, tellus lacus eleifend magna, ac lobortis felis ipsum id sapien. Proin ornare rutrum metus, ac convallis diam volutpat sit amet. Phasellus volutpat, elit sit amet tincidunt mollis, felis mi scelerisque mauris, ut facilisis leo magna accumsan sapien. In rutrum vehicula nisl eget tempor. Nullam maximus ullamcorper libero non maximus. Integer ultricies velit id convallis varius. Praesent eu nisl eu urna finibus ultrices id nec ex. Mauris ac mattis quam. Fusce aliquam est nec sapien bibendum, vitae malesuada ligula condimentum.Float to rightPraesent maximus aliquam sapien. Sed vel neque in dolor pulvinar auctor. Maecenas pharetra, sem sit amet interdum posuere, tellus lacus eleifend magna, ac lobortis felis ipsum id sapien. Proin ornare rutrum metus, ac convallis diam volutpat sit amet. Phasellus volutpat, elit sit amet tincidunt mollis, felis mi scelerisque mauris, ut facilisis leo magna accumsan sapien. In rutrum vehicula nisl eget tempor. Nullam maximus ullamcorper libero non maximus. Integer ultricies velit id convallis varius. Praesent eu nisl eu urna finibus ultrices id nec ex. Mauris ac mattis quam. Fusce aliquam est nec sapien bibendum, vitae malesuada ligula condimentum.Dark/Light mode &amp; ShadowThe image below will toggle dark/light mode based on theme preference, notice it has shadows.VideoReverse Footnote            The footnote source¬†&#8617;&#xfe0e;              The 2nd footnote source¬†&#8617;&#xfe0e;      "
  }
  
]

